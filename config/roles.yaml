---
roles:
  master:
    providers:
      - type: virtualbox
        customize:
          - [modifyvm, !ruby/sym id, '--memory', 4096]
          - [modifyvm, !ruby/sym id, '--ioapic', 'on']
          - [modifyvm, !ruby/sym id, '--cpus', '4']
    provisioners:
      - type: pe_bootstrap
        role: :master
        answer_extras:
          - 'q_pe_database=y'
          - 'q_puppet_cloud_install=y'
          - 'q_puppetmaster_enterpriseconsole_port=443'
          - 'q_skip_backup=y'
          - 'q_use_application_services=y'
          - 'q_puppetmaster_r10k_remote=https://github.com/dgrstl/puppet-sandbox-control.git'
          - 'q_puppetmaster_r10k_private_key=/etc/puppetlabs/puppetserver/ssh/id-control_repo.rsa'
          - 'q_puppetmaster_code_manager_auto_configure=y'
      - type: shell
        path: "scripts/deploy_repo.sh"

  pe_agent:
    provisioners:
      - type: pe_agent
        master_vm: master.inf.puppetlabs.demo


  windows_agent:
    communicator: winrm
    forwarded_ports:
          - { guest: 5985, host: 35985, auto_correct: true }
          - { guest: 3389, host: 33389, auto_correct: true }
    private_networks:
      - {ip: '0.0.0.0', auto_network: true}
    provisioners:
      - type: hosts
      - type: shell
        inline: 'Set-ItemProperty -Path "HKLM:\Software\Microsoft\Windows\CurrentVersion\Policies\System" -Name "EnableLUA" -Value "0"'
      # The reload is important. It needs to happen for the name, domain, and
      # registry changes to take effect.
      - type: reload
      # Install the windows puppet agent using a PowerShell script. The
      # install_agent.ps1 script will set the agent certname it reads from
      # the system. The hosts provisioner should have configured these things
      # prior to the reboot.
      - type: shell
        path: "scripts/install_agent.ps1"
      - type: shell
        path: "scripts/install_forge_root_cert.ps1"
    synced_folders:
      - host_path:  '.files'
        guest_path: 'c:/seteam-files'

  trusted_fact_pe_aio_2015_3:
    provisioners:
      - type: shell
        inline: 'mkdir -p /etc/puppetlabs/puppet; cp /vagrant/trusted_facts/pe_aio_2015_3_csr_attributes.yaml /etc/puppetlabs/puppet/csr_attributes.yaml'

  trusted_fact_pe_node:
    provisioners:
      - type: shell
        inline: 'mkdir -p /etc/puppetlabs/puppet; cp /vagrant/trusted_facts/pe_node_csr_attributes.yaml /etc/puppetlabs/puppet/csr_attributes.yaml'

  el_stop_firewall:
    provisioners:
      - type: shell
        inline: |
          RH_VERS=$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))
          if [ "$RH_VERS" -gt "6" ]; then
            systemctl stop firewalld.service
            systemctl disable firewalld.service
          else
            service iptables stop
            chkconfig iptables off
          fi

  el_base:
    private_networks:
      - {ip: '0.0.0.0', auto_network: true}
    provisioners:
      - {type: hosts}
      - {type: shell, inline: "echo 'nameserver 8.8.8.8' > /etc/resolv.conf"}
    #provisioners:
    #  - type: shell
    #    inline: '/usr/bin/yum install telnet -y'
    #  - type: shell
    #    inline: '/usr/bin/yum install vim -y'
    #  - type: shell
    #    inline: '/usr/bin/yum install tree -y'
